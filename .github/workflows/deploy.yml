name: Build & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: 
      - opened
      - synchronize
      - reopened
    branches:
      - "*"
  workflow_dispatch:
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GEOLONIA_BOT_PAT_TOKEN }}

      - run: npm ci
      # gitに日本語ファイル名に対応させる。
      - run: git config --global core.quotepath false

      - run: sudo apt-get install -y nkf

      # ディレクトリ名のチェック
      - run: bash ./src/validate-dir-name.sh ../data

      - run: npm run build-config-json
      - run: npm run test

      # Excel を CSV に変換
      - run: npm run build-csv
        continue-on-error: true
        id: build-step

      - name: Comment to PR if build fails
        id: comment-build-error
        if: steps.build-step.outcome == 'failure'
        run: ./src/errorFiles.sh
        env:
          GH_TOKEN: ${{ github.token }}
          OWNER: "${{ github.repository_owner }}"
          REPO: "${{ github.event.repository.name }}"
          BRANCH: "${{ github.event.pull_request.head.ref }}"

      # CSV を GeoJSON に変換
      - run: npm run build-location-data

      - name: Install GDAL (for ogr2ogr)
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin

      # shapeファイルを GeoJSON に変換
      - run: |
          ./src/shape2Geojson.sh
        # continue-on-error: true
        # id: shape2geojson-step

      - run: npm run build-standard-data
      - run: npm run build-api
      - run: npm run build-data-updates

      - name: Update README
        if: github.event_name == 'pull_request'
        run: |
          git config --global user.name "geolonia-bot"
          git config --global user.email "geolonia-bot@users.noreply.github.com"
          git checkout $GITHUB_HEAD_REF; \
          npm run build-readme; \
          if ! git diff --quiet README.md; then \
            git add README.md; \
            git commit -m "Update README By GitHub Actions"; \
            git push -f; \
          fi

      - uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/main'
        with:
          name: build
          path: build

  comment-diff:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      issues: write
      pull-requests: write

    steps:
    - name: Checkout main branch into main_branch_content directory
      uses: actions/checkout@v2
      with:
        ref: main
        path: main_branch_content/

    - name: install nkf
      run: |
        sudo apt-get install -y nkf

    - name: Build CSV for main branch
      run: |
        cd main_branch_content/
        npm ci
        npm run build-csv

    - name: Checkout current branch into current_branch_content directory
      uses: actions/checkout@v2
      with:
        path: current_branch_content/

    - name: Build CSV for current branch
      run: |
        cd current_branch_content/
        npm ci
        npm run build-csv

    - name: Add comment to show CSV diff
      id: csv_diff_step
      run: ./current_branch_content/src/csvdiff.sh
      continue-on-error: true
        
    - uses: peter-evans/find-comment@v2
      id: find-comment
      if: steps.csv_diff_step.outcome == 'success'
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: '今回更新されたデータの CSV 差分は以下の通りです'

    - uses: peter-evans/create-or-update-comment@v3
      if: steps.csv_diff_step.outcome == 'success'
      with:
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body-path: './comment.txt'
        edit-mode: 'replace'

  deploy:
    if: github.ref == 'refs/heads/main'

    # Allow one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: true

    needs:
      - build

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    # environment is not compatible with AWS credentials
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "build"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        
  deploy-s3:
    if: github.ref == 'refs/heads/main'

    needs:
      - build

    runs-on: ubuntu-latest
    # Allow write on id-token so we can use it to authenticate to AWS
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::302263045312:role/yaizu-smartcity-jp-github-actions-deploy-v1
          aws-region: ap-northeast-1

      - name: Deploy to S3
        run: |
          aws s3 sync ./build s3://yaizu-smartcity-jp-frontend-v1 \
            --delete \
            --cache-control "public,max-age=60" \

          aws cloudfront create-invalidation --distribution-id "ENI2MYYW0W5YR" --paths "/*"

  # backup:
  #   if: github.ref == 'refs/heads/main'

  #   runs-on: ubuntu-latest
  #   # Allow write on id-token so we can use it to authenticate to AWS
  #   permissions:
  #     contents: read
  #     id-token: write

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set current datetime as env variable
  #       env:
  #         TZ: "Asia/Tokyo"
  #       run: echo "CURRENT_DATETIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         role-to-assume: arn:aws:iam::584344484091:role/takamatsu_github_s3_backup
  #         aws-region: ap-northeast-1

  #     - name: Backup data folder to S3 bucket
  #       run: |
  #         aws s3 sync data s3://takamatsu-city-opendata-backup-ap-northeast-1/${{ env.CURRENT_DATETIME }}
