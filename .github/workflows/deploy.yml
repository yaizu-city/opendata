name: Build & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: 
      - opened
      - synchronize
      - reopened
    branches:
      - "*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GEOLONIA_BOT_PAT_TOKEN }}

      - run: npm ci

      # gitに日本語ファイル名に対応させる。
      - run: git config --global core.quotepath false

      - run: sudo apt-get install -y nkf tippecanoe

      - run: bash ./src/validate-dir-name.sh ../data

      - run: npm run build-config-json

      - run: npm run build-csv
        continue-on-error: true
        id: build-step

      - name: Comment to PR if build fails
        id: comment-build-error
        if: steps.build-step.outcome == 'failure'
        run: ./src/errorFiles.sh
        env:
          GH_TOKEN: ${{ github.token }}
          OWNER: "${{ github.repository_owner }}"
          REPO: "${{ github.event.repository.name }}"
          BRANCH: "${{ github.event.pull_request.head.ref }}"

      - name: Install GDAL (for ogr2ogr)
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin

      - name: 差分を取得
        id: changed-dirs
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git diff --name-only origin/main | grep "^data/" > changed_files.txt || true
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            PREVIOUS_COMMIT=$(git rev-parse HEAD^)
            CURRENT_COMMIT=$(git rev-parse HEAD)
            git diff --name-only $PREVIOUS_COMMIT $CURRENT_COMMIT | grep "^data/" > changed_files.txt || true
          fi

          xargs -n1 dirname < changed_files.txt | sort -u > changed_dirs.txt || true

      - name: GeoJSON に変換
        run: |
          while read -r dir; do
            [[ -z "$dir" ]] && continue
            node ./src/build-location-data.js "$dir"
            ./src/shape2Geojson.sh "$dir"
          done < changed_dirs.txt

      - name: GeoJSONの属性を変換
        run: |
          while read -r dir; do
            [[ -z "$dir" ]] && continue
            ./src/convertAttributes.sh "$dir"
          done < changed_dirs.txt

      - run: npm run build-standard-data
      - run: npm run build-api

      # ベクトルタイル生成（xyz形式）
      - name: Generate Vector Tiles
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p ./tiles
          tippecanoe -e ./tiles -z14 -Z5 -l $(basename $(pwd)) ./build/*.geojson

      # AWS Credentials設定
      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::302263045312:role/yaizu-smartcity-jp-github-actions-deploy-v1
          aws-region: ap-northeast-1

      # ベクトルタイルをS3にデプロイ
      - name: Deploy Vector Tiles to S3
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 sync ./tiles s3://yaizu-smartcity-jp-frontend-v1/tiles \
            --exact-timestamps \
            --cache-control "public,max-age=3600"

          aws cloudfront create-invalidation --distribution-id "ENI2MYYW0W5YR" --paths "/tiles/*"

      # 既存のフロントエンドコンテンツもデプロイ
      - name: Deploy Frontend Contents to S3
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 sync ./build s3://yaizu-smartcity-jp-frontend-v1 \
            --exact-timestamps \
            --cache-control "public,max-age=60"

          aws cloudfront create-invalidation --distribution-id "ENI2MYYW0W5YR" --paths "/*"